/* 
#1 background-size
#2 background positioning
#3 origin/clip/attachment proporties
#4 bacground shorthand
#5 styling images
#6image layout?
#7 linear gradients
# gradients!!! forgot this?
#9 stacking multiple gradients
#10filters
#11 svg basic
#12 read on aligning to basline element:
https://www.w3.org/TR/CSS21/visudet.html#propdef-vertical-align
*/

/*############ 1 background-size ############*/
https://codepen.io/dawidgaleziewski/pen/NeQrJa

/* 
-by default when we add picture we will see top left corner
-bacground is shorten
-when using background-image and background-color the color will be behind image

###defined values
-background-size has two values width and height.
-if we set only first value it will set width to auto:
background-size: 100px auto;
-when using 100% it will take whole container, it will cropp extra part of image

###keywords:
-cover- same as 100% but detects which paramether is more important:
    -for landscape - width 100%
    - portrait - height 100%
    -zooms in if image is smaller than container

-contain- will make sure whole picture is visible. Does not care about the white spaces


###background-repeat
by default image will repeat if needed more space
we can modify this behavoiour
-background-repeat: no-repeat - does not releat
-background-repeat: repeat-x - repeats image on x axis, same can be done for y axis
*/


/*############ 2 background-position ############*/
https://codepen.io/dawidgaleziewski/pen/BvXWvP
/* background-position 
PX
-first argument moves picture by amount added - it says how fair away picture should be from this part of container
- second argument is from the top

%- how much of the part on this side should be cropped
If 100px are being cropped, and we set 10% on the top, only 10 px will be taken from top which meens 90px remaining will be taken from the bottom
if we set this to 100% on top, alll cropped space will be taken from the top
0% - it will be perfectly alligned 
default used is 50%!


keywords - top - left - right - bottom - center
- no cropping will be done to that side
- center crops 50%/50%

*/


/* ############3 origin/clip/attachment proporties############ */
/* 
#a) background-origin:
https://codepen.io/dawidgaleziewski/pen/ZVgJJZ
sets the origin of the picture/where the picture starts
It starts from upper left corner of eaither: margin, padding, content
*/

     background-origin: content-box ;
     /* 
     -Border-box - starts from upper left corner of the border
     -Padding-box- starts from upper right corner of the padding
     -Content-box - startf from upper right corner of content

 
     !those affect left and right and not top and bottom (in this example) as those are cropped
         This is controled by other property - background-clip
         */

/* # b) background-clip 
Specify how far the background should extend within an element:
-border-box- default - extands to the edges of border
-padding-box - extands to the edges of padding
-content-box - extands to the edges of content
*/


/* #c) background-attachment*/
/* The background-attachment property sets whether a background image scrolls with the rest of the page, or is fixed.
by ussing background-attachment: fixed we can get a cool effect where the image will not scroll with the rest of page

Scroll is default value  and the image will scroll with page
https://codepen.io/dawidgaleziewski/pen/bOzNvw

also is connected sith overflow property.
if we use overflow: hidden it will stick to one conntent and not move
*/

/* ############4 background shorthand############ */
https://codepen.io/dawidgaleziewski/pen/OrKdjd

#product-overview {    
    /* Putting all values in shorten */
        /* position comes first, it is seperated from size by slash */
        /* next is repeat */
        /* For origin anc clip - if we put one value (i.eborder-box) it will be set for both of them.
            If we have two values firs one is origin and the second is clip*/
        /* last is background attachment */
    background: url("freedom.jpg") left 10% bottom 20%/cover no-repeat border-box padding-box fixed;
    /* background-image: url("freedom.jpg");
    background-position: left 10% bottom 20%;
    background-size: cover; */
    /* background-repeat: no-repeat;
    background-origin: content-box ; */
    /* background-clip: content-box;
    background-attachment: fixed; */


    /* border: 5px dashed red; */
    width: 100%;
    height: 528px;
    padding: 10px;
    margin-top: 43px;
    position: relative;
}


/* ############5 image styling############ */

/* Using images depends if they are nested in inline element or block element */
/* there is not so much we can do to style normal image
therefore better to use background-image if possible
 Only issue is that background image is taken out of document flow*/
 .main-header__brand {
    color: #0e4f1f;
    text-decoration: none;
    font-weight: bold;
    font-size: 22px;

    /* style the image */
    /*! if we change the height of container the img will not be affected */
    width: 22px;

    /* if we add inline-block than 100% height in img selector will work
     Image will be as big as the container
     previously this was not working as image was a inline element */
    display: inline-block;
}

.main-header__brand >img {
    /* we can fix this problem by changing height of picture itself */
    /* height: 22px; */

 
    width: 100%;
}

/* ############7 linear gradients############ */

#product-overview {   
    /*replace the picture to gradient  */
    /* gradients, both linear and radial are threated as images */
   background: url("images/freedom.jpg") left 10% bottom 20%/cover no-repeat border-box padding-box fixed;
   /* we add the gradient using linear-gradient() function*/
   /* first argument is direction of the gradient */
       /* for example (to right) 
       ot (to left-bottom)
       You cen ude degrees as well
       (30deg)*/
   /* next arguments are color 
    you can add as many colors as you want
    you can use also transparency and transition from color to transparency
     linear-gradient( 180deg,red, transparent)

   Normally every color is given its share to occupy, but this can be changed as well:
   linear-gradient( 180deg,red, blue, green 70%);
     */
   background-image: linear-gradient( 180deg,red 70%, blue 80%);
   width: 100%;
   height: 528px;
   padding: 10px;
   margin-top: 43px;
   position: relative;


   /* ############8 radial gradient############ */
   https://codepen.io/dawidgaleziewski/pen/roXXwb
   /* used same way as linear by adding a function */
   /* creates a circle in the middle */
   /* you can add many colors as well */
   /* you can use elipse which is default or circle */
   /* you can use 'at' attribute to define where does the gradient starts */
  /* size can be defined after shape */

  /* there are usefull keywords like farthest-side/closest-side */
   background-image: radial-gradient(circle 20px at 20% 50%, red, blue, green);

}

/* ############9 multiple backgrounds############ */
https://codepen.io/dawidgaleziewski/pen/roXXwb
/* Using multiple backgrounds */
/* You can use multiple backgrounds but 
only one color can be used and it will be the most bottom */

#product-overview {   
    /* adding color as a fallback */
    /* adding also linear gradient (gradien tis threated as img so we can stack it with color) */
    /* we seperate difrent background by coma */
    background: linear-gradient(to top, rgba(80, 68,18, 0.6) 10%, transparent), 
    url("images/freedom.jpg")  left 10% bottom 20%/cover no-repeat border-box padding-box fixed,
     #ff1b68;

    width: 100%;
    height: 528px;
    padding: 10px;
    margin-top: 43px;
    position: relative;
}

/*############10 filters############  */
https://codepen.io/dawidgaleziewski/pen/KJPPqP

.background {
    background: url("../images/plans-background.jpg") center/cover;
    /* filters help us modify the look of element and its content by adding effects like blur */
    /* filters use functions */
    filter: grayscale(40%) ;
    width: 100%;
    height: 100%;
    position: fixed;
    z-index: -1;
}

/* ##########11 briefly on svg############ */
/* we can style a loot regarding svgs like colors of the part of the image, but this is more related to svgs than the  css */
/* some manipulations we can do is stroke and fill */
.key-feature__image {
    background: #ffcede;
    width: 128px;
    height: 128px;
    border: 2px solid #424242;
    border-radius: 50%;
    margin: auto;
    padding: 20px;
}
/* #svg can be added directly in html */
<section id="key-features">
<h1 class="section-title">Many Good Reasons to Stick Around</h1>
<ul class="key-feature__list">
    <li class="key-feature">
        <div class="key-feature__image">
                <svg viewBox="0 0 512 512">
                        <path style="fill:#F09B24;" d="M344,248h-32V112c0-4.418-3.582-8-8-8h-40c-4.418,0-8,3.582-8,8s3.582,8,8,8h32v128h-32  c-4.418,0-8,3.582-8,8s3.582,8,8,8h32v128h-32c-4.418,0-8,3.582-8,8s3.582,8,8,8h40c4.418,0,8-3.582,8-8V264h32c4.418,0,8-3.582,8-8  S348.418,248,344,248z"
                        />
                        <path style="fill:#8E9AA9;" d="M264,64H8c-4.418,0-8,3.582-8,8v80c0,4.418,3.582,8,8,8h256c4.418,0,8-3.582,8-8V72  C272,67.582,268.418,64,264,64z"
                        />
                        <path style="fill:#7C899B;" d="M24,144c-4.418,0-8-3.582-8-8V64H8c-4.418,0-8,3.582-8,8v80c0,4.418,3.582,8,8,8h256  c4.418,0,8-3.582,8-8v-8H24z"
                        />
                        <rect x="152" y="96" style="fill:#B8E3A8;" width="88" height="32" />
                        <g>
                            <polygon style="fill:#7EC97D;" points="152,96 152,128 166,128 198,96  " />
                            <polygon style="fill:#7EC97D;" points="220,96 188,128 240,128 240,96  " />
                        </g>
                        <path style="fill:#56677E;" d="M240,136h-88c-4.418,0-8-3.582-8-8V96c0-4.418,3.582-8,8-8h88c4.418,0,8,3.582,8,8v32  C248,132.418,244.418,136,240,136z M160,120h72v-16h-72V120z"
                        />
                        <g>
                            <path style="fill:#435670;" d="M32,136c-4.418,0-8-3.582-8-8V96c0-4.418,3.582-8,8-8s8,3.582,8,8v32C40,132.418,36.418,136,32,136z   "
                            />
                            <path style="fill:#435670;" d="M56,136c-4.418,0-8-3.582-8-8V96c0-4.418,3.582-8,8-8s8,3.582,8,8v32C64,132.418,60.418,136,56,136z   "
                            />
                            <path style="fill:#435670;" d="M80,136c-4.418,0-8-3.582-8-8V96c0-4.418,3.582-8,8-8s8,3.582,8,8v32C88,132.418,84.418,136,80,136z   "
                            />
                            <path style="fill:#435670;" d="M104,136c-4.418,0-8-3.582-8-8V96c0-4.418,3.582-8,8-8s8,3.582,8,8v32   C112,132.418,108.418,136,104,136z"
                            />
                            <path style="fill:#435670;" d="M128,105c-4.418,0-8-3.582-8-8v-1c0-4.418,3.582-8,8-8s8,3.582,8,8v1   C136,101.418,132.418,105,128,105z"
                            />
                            <path style="fill:#435670;" d="M128,136c-4.418,0-8-3.582-8-8v-1c0-4.418,3.582-8,8-8s8,3.582,8,8v1   C136,132.418,132.418,136,128,136z"
                            />
                        </g>
